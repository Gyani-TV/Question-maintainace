#!/usr/bin/env node

const minimist = require('minimist')
const chalk = require('chalk');
const clear = require('clear');
const figlet = require('figlet');
const error = require('../processors/utils/error')
const files = require('../processors/utils/files');

clear();  // clear the console of remnescents

console.log(
  chalk.yellow(
    figlet.textSync('RPMS', { horizontalLayout: 'full' })
  )
);
// look for the local config file for the deployment folder
// if (files.fileInDirectoryExists(process.env.REPO_LISTING)) {
//   console.log(chalk.red('Already a radii cms repository!'));
//   //process.exit();
// }


module.exports = () => {
  const args = minimist(process.argv.slice(2))  // the helper args to the main command

  let cmd = args._[0] || 'help'

  if (args.version || args.v) {
    cmd = 'version'
  }

  if (args.help || args.h) {
    cmd = 'help'
  }

  switch (cmd) {
    case 'initialize':
        /**
         * Start the server in the requested port id
         */
      require('./processors/manageServer')(args)
      break
    case 'login':
      require('./cmds/login')(args)
      break
    case 'generate':
      require('./cmds/generateFrontend')(args)
    case 'today':
      require('./cmds/today')(args)
      break

    case 'forecast':
      require('./cmds/forecast')(args)
      break

    case 'version':
      require('./cmds/version')(args)
      break

    case 'help':
      require('./cmds/help')(args)
      break
      //remove the contents in this created repository
    case 'wipe-out' || 'wipeOut':
      require('./cmds/wipeRepo')(args)
      break

    default:
      error(`"${cmd}" is not a valid command!`, true)
      break
  }
}